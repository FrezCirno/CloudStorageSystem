// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RabbitMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from RabbitMsg.proto</summary>
public static partial class RabbitMsgReflection {

  #region Descriptor
  /// <summary>File descriptor for RabbitMsg.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RabbitMsgReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9SYWJiaXRNc2cucHJvdG8imAEKCVJhYmJpdE1zZxIQCghmaWxlSGFzaBgB",
          "IAEoCRITCgtjdXJMb2NhdGlvbhgCIAEoCRITCgtkc3RMb2NhdGlvbhgDIAEo",
          "CRIjCgdkc3RUeXBlGAQgASgOMhIuUmFiYml0TXNnLkRzdFR5cGUiKgoHRHN0",
          "VHlwZRIJCgVNSU5JTxAAEggKBENFUEgQARIKCgZBTElZVU4QAmIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RabbitMsg), global::RabbitMsg.Parser, new[]{ "FileHash", "CurLocation", "DstLocation", "DstType" }, null, new[]{ typeof(global::RabbitMsg.Types.DstType) }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RabbitMsg : pb::IMessage<RabbitMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RabbitMsg> _parser = new pb::MessageParser<RabbitMsg>(() => new RabbitMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RabbitMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RabbitMsgReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RabbitMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RabbitMsg(RabbitMsg other) : this() {
    fileHash_ = other.fileHash_;
    curLocation_ = other.curLocation_;
    dstLocation_ = other.dstLocation_;
    dstType_ = other.dstType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RabbitMsg Clone() {
    return new RabbitMsg(this);
  }

  /// <summary>Field number for the "fileHash" field.</summary>
  public const int FileHashFieldNumber = 1;
  private string fileHash_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FileHash {
    get { return fileHash_; }
    set {
      fileHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "curLocation" field.</summary>
  public const int CurLocationFieldNumber = 2;
  private string curLocation_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurLocation {
    get { return curLocation_; }
    set {
      curLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dstLocation" field.</summary>
  public const int DstLocationFieldNumber = 3;
  private string dstLocation_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DstLocation {
    get { return dstLocation_; }
    set {
      dstLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dstType" field.</summary>
  public const int DstTypeFieldNumber = 4;
  private global::RabbitMsg.Types.DstType dstType_ = global::RabbitMsg.Types.DstType.Minio;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RabbitMsg.Types.DstType DstType {
    get { return dstType_; }
    set {
      dstType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RabbitMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RabbitMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FileHash != other.FileHash) return false;
    if (CurLocation != other.CurLocation) return false;
    if (DstLocation != other.DstLocation) return false;
    if (DstType != other.DstType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FileHash.Length != 0) hash ^= FileHash.GetHashCode();
    if (CurLocation.Length != 0) hash ^= CurLocation.GetHashCode();
    if (DstLocation.Length != 0) hash ^= DstLocation.GetHashCode();
    if (DstType != global::RabbitMsg.Types.DstType.Minio) hash ^= DstType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (FileHash.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(FileHash);
    }
    if (CurLocation.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CurLocation);
    }
    if (DstLocation.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(DstLocation);
    }
    if (DstType != global::RabbitMsg.Types.DstType.Minio) {
      output.WriteRawTag(32);
      output.WriteEnum((int) DstType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (FileHash.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(FileHash);
    }
    if (CurLocation.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CurLocation);
    }
    if (DstLocation.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(DstLocation);
    }
    if (DstType != global::RabbitMsg.Types.DstType.Minio) {
      output.WriteRawTag(32);
      output.WriteEnum((int) DstType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FileHash.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FileHash);
    }
    if (CurLocation.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurLocation);
    }
    if (DstLocation.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DstLocation);
    }
    if (DstType != global::RabbitMsg.Types.DstType.Minio) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DstType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RabbitMsg other) {
    if (other == null) {
      return;
    }
    if (other.FileHash.Length != 0) {
      FileHash = other.FileHash;
    }
    if (other.CurLocation.Length != 0) {
      CurLocation = other.CurLocation;
    }
    if (other.DstLocation.Length != 0) {
      DstLocation = other.DstLocation;
    }
    if (other.DstType != global::RabbitMsg.Types.DstType.Minio) {
      DstType = other.DstType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FileHash = input.ReadString();
          break;
        }
        case 18: {
          CurLocation = input.ReadString();
          break;
        }
        case 26: {
          DstLocation = input.ReadString();
          break;
        }
        case 32: {
          DstType = (global::RabbitMsg.Types.DstType) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          FileHash = input.ReadString();
          break;
        }
        case 18: {
          CurLocation = input.ReadString();
          break;
        }
        case 26: {
          DstLocation = input.ReadString();
          break;
        }
        case 32: {
          DstType = (global::RabbitMsg.Types.DstType) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the RabbitMsg message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum DstType {
      [pbr::OriginalName("MINIO")] Minio = 0,
      [pbr::OriginalName("CEPH")] Ceph = 1,
      [pbr::OriginalName("ALIYUN")] Aliyun = 2,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
