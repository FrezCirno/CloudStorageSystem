// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ServerMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ServerMsg.proto</summary>
public static partial class ServerMsgReflection {

  #region Descriptor
  /// <summary>File descriptor for ServerMsg.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerMsgReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9TZXJ2ZXJNc2cucHJvdG8icAoJU2VydmVyTXNnEhAKCHptcV9ob3N0GAEg",
          "ASgJEhAKCHptcV9wb3J0GAIgASgJEhMKC3RvdGFsX3NwYWNlGAMgASgEEhcK",
          "D2F2YWlsYWJsZV9zcGFjZRgEIAEoBBIRCglodHRwX3BvcnQYBSABKAliBnBy",
          "b3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerMsg), global::ServerMsg.Parser, new[]{ "ZmqHost", "ZmqPort", "TotalSpace", "AvailableSpace", "HttpPort" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ServerMsg : pb::IMessage<ServerMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ServerMsg> _parser = new pb::MessageParser<ServerMsg>(() => new ServerMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMsgReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMsg(ServerMsg other) : this() {
    zmqHost_ = other.zmqHost_;
    zmqPort_ = other.zmqPort_;
    totalSpace_ = other.totalSpace_;
    availableSpace_ = other.availableSpace_;
    httpPort_ = other.httpPort_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMsg Clone() {
    return new ServerMsg(this);
  }

  /// <summary>Field number for the "zmq_host" field.</summary>
  public const int ZmqHostFieldNumber = 1;
  private string zmqHost_ = "";
  /// <summary>
  /// addr of zeromq
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ZmqHost {
    get { return zmqHost_; }
    set {
      zmqHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "zmq_port" field.</summary>
  public const int ZmqPortFieldNumber = 2;
  private string zmqPort_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ZmqPort {
    get { return zmqPort_; }
    set {
      zmqPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "total_space" field.</summary>
  public const int TotalSpaceFieldNumber = 3;
  private ulong totalSpace_;
  /// <summary>
  /// data for disk space
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TotalSpace {
    get { return totalSpace_; }
    set {
      totalSpace_ = value;
    }
  }

  /// <summary>Field number for the "available_space" field.</summary>
  public const int AvailableSpaceFieldNumber = 4;
  private ulong availableSpace_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong AvailableSpace {
    get { return availableSpace_; }
    set {
      availableSpace_ = value;
    }
  }

  /// <summary>Field number for the "http_port" field.</summary>
  public const int HttpPortFieldNumber = 5;
  private string httpPort_ = "";
  /// <summary>
  /// host to interact with http file 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HttpPort {
    get { return httpPort_; }
    set {
      httpPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ZmqHost != other.ZmqHost) return false;
    if (ZmqPort != other.ZmqPort) return false;
    if (TotalSpace != other.TotalSpace) return false;
    if (AvailableSpace != other.AvailableSpace) return false;
    if (HttpPort != other.HttpPort) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ZmqHost.Length != 0) hash ^= ZmqHost.GetHashCode();
    if (ZmqPort.Length != 0) hash ^= ZmqPort.GetHashCode();
    if (TotalSpace != 0UL) hash ^= TotalSpace.GetHashCode();
    if (AvailableSpace != 0UL) hash ^= AvailableSpace.GetHashCode();
    if (HttpPort.Length != 0) hash ^= HttpPort.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ZmqHost.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ZmqHost);
    }
    if (ZmqPort.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ZmqPort);
    }
    if (TotalSpace != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(TotalSpace);
    }
    if (AvailableSpace != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(AvailableSpace);
    }
    if (HttpPort.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(HttpPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ZmqHost.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ZmqHost);
    }
    if (ZmqPort.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ZmqPort);
    }
    if (TotalSpace != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(TotalSpace);
    }
    if (AvailableSpace != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(AvailableSpace);
    }
    if (HttpPort.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(HttpPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ZmqHost.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ZmqHost);
    }
    if (ZmqPort.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ZmqPort);
    }
    if (TotalSpace != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalSpace);
    }
    if (AvailableSpace != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AvailableSpace);
    }
    if (HttpPort.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HttpPort);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerMsg other) {
    if (other == null) {
      return;
    }
    if (other.ZmqHost.Length != 0) {
      ZmqHost = other.ZmqHost;
    }
    if (other.ZmqPort.Length != 0) {
      ZmqPort = other.ZmqPort;
    }
    if (other.TotalSpace != 0UL) {
      TotalSpace = other.TotalSpace;
    }
    if (other.AvailableSpace != 0UL) {
      AvailableSpace = other.AvailableSpace;
    }
    if (other.HttpPort.Length != 0) {
      HttpPort = other.HttpPort;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ZmqHost = input.ReadString();
          break;
        }
        case 18: {
          ZmqPort = input.ReadString();
          break;
        }
        case 24: {
          TotalSpace = input.ReadUInt64();
          break;
        }
        case 32: {
          AvailableSpace = input.ReadUInt64();
          break;
        }
        case 42: {
          HttpPort = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ZmqHost = input.ReadString();
          break;
        }
        case 18: {
          ZmqPort = input.ReadString();
          break;
        }
        case 24: {
          TotalSpace = input.ReadUInt64();
          break;
        }
        case 32: {
          AvailableSpace = input.ReadUInt64();
          break;
        }
        case 42: {
          HttpPort = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
